{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts","../../src/shared/email_class.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\n\r\nimport { LoginPage } from './login';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(LoginPage),\r\n    TranslateModule.forChild()\r\n  ],\r\n  exports: [\r\n    LoginPage\r\n  ]\r\n})\r\nexport class LoginPageModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Storage } from '@ionic/storage';\r\nimport { AlertController } from 'ionic-angular';\r\nimport { loginclass } from './loginclass';\r\nimport { user_class } from './user_class';\r\nimport { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { IonicPage, NavController, ToastController } from 'ionic-angular';\r\n\r\nimport { User } from '../../providers/providers';\r\nimport { LoginproProvider } from '../../providers/loginpro/loginpro';\r\nimport { MainPage } from \"../pages\";\r\nimport { LoadingController } from 'ionic-angular/components/loading/loading-controller';\r\nimport { email_class } from '../../shared/email_class';\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-login',\r\n  templateUrl: 'login.html'\r\n})\r\nexport class LoginPage {\r\n  // The account fields for the login form.\r\n  // If you're using the username field with or without email, make\r\n  // sure to add it to the type\r\n  /*account: { email: string, password: string } = {\r\n    email: 'test@example.com',\r\n    password: 'test'\r\n  };*/\r\n\r\n  // Our translated text strings\r\n  private loginErrorString: string;\r\n  u1: user_class[] = [];\r\n  loginsession: loginclass;\r\n  constructor(public load: LoadingController, public alert: AlertController, public storage: Storage, public data: LoginproProvider, public navCtrl: NavController,\r\n    public user: User,\r\n    public toastCtrl: ToastController,\r\n    public translateService: TranslateService) {\r\n\r\n    this.translateService.get('LOGIN_ERROR').subscribe((value) => {\r\n      this.loginErrorString = value;\r\n    })\r\n  }\r\n\r\n  // Attempt to login in through our User service\r\n  /*dologin() {\r\n    this.data.doLogin(this.eid,this.pass).subscribe((resp) => {\r\n      this.navCtrl.push(MainPage);\r\n    }, (err) => {\r\n      this.navCtrl.push(MainPage);\r\n      // Unable to log in\r\n      let toast = this.toastCtrl.create({\r\n        message: this.loginErrorString,\r\n        duration: 3000,\r\n        position: 'top'\r\n      });\r\n      toast.present();\r\n    });\r\n  }*/\r\n  dt: user_class;\r\n  eid: string = \"jaishilbhavsar@yahoo.in\";\r\n  pass: string = \"jaishil\";\r\n  onClick() {\r\n    this.data.doLogin(this.eid, this.pass).subscribe(\r\n      (dt) => {\r\n        if (dt == \"\") {\r\n          let toast = this.toastCtrl.create({\r\n            message: \"Invalid UserName Or Password , Try Again\",\r\n            duration: 4000,\r\n            position: 'top'\r\n          });\r\n          toast.present();\r\n        }\r\n        else {\r\n          this.storage.set('uid', this.eid);\r\n          /*this.storage.get('uid').then((val) => {\r\n            console.log(val);\r\n          });*/\r\n          this.navCtrl.push(MainPage);\r\n\r\n        }\r\n      },\r\n\r\n      (err) => alert(\"invalid\"),\r\n    );\r\n  }\r\n  forid: string = '';\r\n  u: user_class[] = [];\r\n  validate() {\r\n    let l1 = this.load.create({\r\n      content: \"Loading ...\"\r\n    });\r\n    l1.present();\r\n    this.data.getUser(this.forid)\r\n      .subscribe(\r\n      (dt:any) => {\r\n        if(dt!=\"\")\r\n        {\r\n        this.u = dt;\r\n        this.eid = this.u[0].user_id;\r\n        var message = \"Hello \" + this.forid + \". You have requested to reset the password. your password is '\" + this.u[0].user_pass + \"'. Password is one of the confidential thing, Don't share it with anyone.\";\r\n        this.data.sendMail(new email_class(message, this.forid, \"Resetting the password of Lets_Meet.\"))\r\n          .subscribe(\r\n          (data1: any) => {\r\n            console.log(\"mail sent\");\r\n            alert(\"The Password has been sent to \" + this.forid);\r\n          },\r\n          function (e) {\r\n            alert(e);\r\n          },\r\n          function () {\r\n            l1.dismiss();\r\n          }\r\n          );\r\n      }\r\n      else{\r\n        alert(\"enter valid mail\");\r\n      }\r\n    }\r\n      ,\r\n      function (e) {\r\n        alert(e);\r\n      },\r\n      function () {\r\n        l1.dismiss();\r\n      }\r\n      );\r\n  }\r\n  showPrompt() {\r\n    let prompt = this.alert.create({\r\n      title: 'Forgot Password',\r\n      message: \"Enter Your Email Id To Get Your Password\",\r\n      inputs: [\r\n        {\r\n          name: 'name',\r\n          placeholder: 'Email_id'\r\n        },\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          handler: data => {\r\n            console.log('Cancel clicked');\r\n          }\r\n        },\r\n        {\r\n          text: 'Send',\r\n          handler: data => {\r\n            this.forid = data.name;\r\n            this.validate();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    prompt.present();\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","export class email_class\r\n{\r\n    constructor(public message:string,public name:string,public subject:string)\r\n    {\r\n        \r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/email_class.ts"],"sourceRoot":""}